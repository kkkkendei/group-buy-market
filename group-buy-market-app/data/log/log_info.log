25-03-02.09:28:30.835 [main            ] INFO  ITradeLockOrderServiceTest - Starting ITradeLockOrderServiceTest using Java 18.0.2 on wzy with PID 35684 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:28:30.836 [main            ] INFO  ITradeLockOrderServiceTest - The following 1 profile is active: "dev"
25-03-02.09:28:31.658 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:28:31.660 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:28:31.694 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
25-03-02.09:28:31.949 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:28:32.261 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:28:32.525 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:28:32.805 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:28:32.875 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:28:32.914 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:28:34.601 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.09:28:34.647 [main            ] INFO  ITradeLockOrderServiceTest - Started ITradeLockOrderServiceTest in 4.183 seconds (JVM running for 4.895)
25-03-02.09:28:35.145 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:28:35.153 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:28:35.170 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.09:28:35.587 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.09:28:35.668 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.09:28:35.668 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:28:35.668 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.09:28:35.705 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:28:35.705 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:909000098111
25-03-02.09:28:35.774 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.09:28:35.864 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.09:32:40.068 [main            ] INFO  ITradeLockOrderServiceTest - Starting ITradeLockOrderServiceTest using Java 18.0.2 on wzy with PID 25380 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:32:40.069 [main            ] INFO  ITradeLockOrderServiceTest - The following 1 profile is active: "dev"
25-03-02.09:32:40.761 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:32:40.763 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:32:40.792 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.09:32:41.029 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$168c19f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:32:41.244 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:32:41.514 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:32:41.789 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:32:41.878 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:32:41.917 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:32:42.183 [main            ] WARN  GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activityRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'IGroupBuyActivityDao' defined in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-infrastructure\target\classes\com\wuzeyu\infrastructure\dao\IGroupBuyActivityDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
25-03-02.09:32:42.231 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
25-03-02.09:32:42.249 [main            ] ERROR SpringApplication      - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activityRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'IGroupBuyActivityDao' defined in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-infrastructure\target\classes\com\wuzeyu\infrastructure\dao\IGroupBuyActivityDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'IGroupBuyActivityDao' defined in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-infrastructure\target\classes\com\wuzeyu\infrastructure\dao\IGroupBuyActivityDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 59 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 72 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:613)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:179)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88e7a32.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88e7a32$$FastClassBySpringCGLIB$$c257fbf7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88e7a32.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 73 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:123)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:95)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611)
	... 84 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:76)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:138)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:131)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:121)
	... 86 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 90 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:196)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 92 common frames omitted
25-03-02.09:32:42.253 [main            ] ERROR TestContextManager     - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@57a78e3] to prepare test instance [com.wuzeyu.test.domain.trade.ITradeLockOrderServiceTest@1a89414e]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activityRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'IGroupBuyActivityDao' defined in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-infrastructure\target\classes\com\wuzeyu\infrastructure\dao\IGroupBuyActivityDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 27 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'IGroupBuyActivityDao' defined in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-infrastructure\target\classes\com\wuzeyu\infrastructure\dao\IGroupBuyActivityDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1534)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	... 59 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 72 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:613)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:179)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88e7a32.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88e7a32$$FastClassBySpringCGLIB$$c257fbf7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88e7a32.sqlSessionFactory(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 73 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:123)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:95)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611)
	... 84 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:76)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:138)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:131)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:121)
	... 86 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'cn.bugstack.infrastructure.dao.po.GroupBuyOrderList'.  Cause: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 90 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: cn.bugstack.infrastructure.dao.po.GroupBuyOrderList
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:196)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 92 common frames omitted
25-03-02.09:35:39.624 [main            ] INFO  ITradeLockOrderServiceTest - Starting ITradeLockOrderServiceTest using Java 18.0.2 on wzy with PID 19224 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:35:39.624 [main            ] INFO  ITradeLockOrderServiceTest - The following 1 profile is active: "dev"
25-03-02.09:35:40.294 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:35:40.296 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:35:40.324 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.09:35:40.562 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$168c19f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:35:40.782 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:35:41.053 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:35:41.322 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:35:41.431 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:35:41.472 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:35:43.117 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.09:35:43.160 [main            ] INFO  ITradeLockOrderServiceTest - Started ITradeLockOrderServiceTest in 3.871 seconds (JVM running for 4.484)
25-03-02.09:35:43.550 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:35:43.557 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:35:43.578 [pool-2-thread-1 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.09:35:43.914 [pool-2-thread-1 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.09:35:43.983 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.09:35:43.983 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:35:43.983 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.09:35:44.020 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:35:44.023 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:909000098111
25-03-02.09:35:44.085 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.09:35:44.210 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.09:48:27.526 [main            ] INFO  ITradeLockOrderServiceTest - Starting ITradeLockOrderServiceTest using Java 18.0.2 on wzy with PID 25464 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:48:27.527 [main            ] INFO  ITradeLockOrderServiceTest - The following 1 profile is active: "dev"
25-03-02.09:48:28.250 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:48:28.253 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:48:28.283 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.09:48:28.526 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$168c19f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:48:28.764 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:48:29.001 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:48:29.263 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:48:29.332 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:48:29.369 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:48:30.976 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.09:48:31.019 [main            ] INFO  ITradeLockOrderServiceTest - Started ITradeLockOrderServiceTest in 3.86 seconds (JVM running for 4.506)
25-03-02.09:48:31.411 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:48:31.418 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:48:31.434 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.09:48:31.824 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.09:48:31.914 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.09:48:31.914 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:48:31.914 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.09:48:31.941 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:48:31.943 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:909000098111
25-03-02.09:48:31.979 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.09:48:32.102 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.09:52:01.456 [main            ] INFO  ITradeLockOrderServiceTest - Starting ITradeLockOrderServiceTest using Java 18.0.2 on wzy with PID 18492 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:52:01.457 [main            ] INFO  ITradeLockOrderServiceTest - The following 1 profile is active: "dev"
25-03-02.09:52:02.127 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:52:02.130 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:52:02.158 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.09:52:02.392 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$78549a08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:52:02.615 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:52:02.894 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:52:03.157 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:52:03.255 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:52:03.289 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:52:04.871 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.09:52:04.909 [main            ] INFO  ITradeLockOrderServiceTest - Started ITradeLockOrderServiceTest in 3.8 seconds (JVM running for 4.44)
25-03-02.09:52:05.314 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:52:05.321 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:52:05.338 [pool-2-thread-1 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.09:52:05.657 [pool-2-thread-1 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.09:52:05.737 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.09:52:05.737 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:52:05.737 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.09:52:05.765 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.09:52:05.766 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:330015345410
25-03-02.09:52:05.799 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.09:52:05.955 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.09:57:36.067 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 20560 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:57:36.068 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.09:57:36.745 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:57:36.747 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:57:36.776 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.09:57:37.013 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$741d0023] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:57:37.237 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:57:37.507 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:57:37.760 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:57:37.882 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:57:37.919 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:57:39.547 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.09:57:39.592 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.878 seconds (JVM running for 4.503)
25-03-02.09:57:40.004 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"934010475764","source":"s01","userId":"xiaofuge"}
25-03-02.09:57:40.007 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"934010475764","source":"s01","userId":"xiaofuge"} res:{"code":"0002","info":"非法参数"}
25-03-02.09:59:48.733 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 19604 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.09:59:48.735 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.09:59:49.433 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.09:59:49.436 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.09:59:49.466 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.09:59:49.710 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$78549a08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:59:49.928 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:59:50.201 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.09:59:50.483 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:59:50.552 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.09:59:50.587 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.09:59:52.289 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.09:59:52.329 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.935 seconds (JVM running for 4.559)
25-03-02.09:59:52.745 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"538337387832","source":"s01","teamId":"31724477","userId":"xiaofuge"}
25-03-02.09:59:52.748 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"538337387832","source":"s01","teamId":"31724477","userId":"xiaofuge"} res:{"code":"0002","info":"非法参数"}
25-03-02.10:03:22.903 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 5244 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:03:22.904 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:03:23.619 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:03:23.622 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:03:23.651 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.10:03:23.893 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:03:24.118 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:03:24.396 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:03:24.676 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:03:24.755 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:03:24.790 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:03:26.467 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:03:26.510 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.957 seconds (JVM running for 4.584)
25-03-02.10:03:26.924 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"631963549080","source":"s01","teamId":"31724477","userId":"xiaofuge"}
25-03-02.10:03:26.925 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:631963549080
25-03-02.10:03:26.939 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:03:27.298 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:03:27.336 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询拼单进度:31724477
25-03-02.10:03:27.349 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:03:27.351 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:03:27.388 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:03:27.390 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:03:27.390 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:03:27.422 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:03:27.426 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"631963549080","source":"s01","teamId":"31724477","userId":"xiaofuge"} res:{"code":"E0007","info":"拼团人群限定，不可参与"}
25-03-02.10:03:27.436 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:03:27.514 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:04:05.588 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 4068 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:04:05.590 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:04:06.305 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:04:06.307 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:04:06.337 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
25-03-02.10:04:06.582 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:04:06.825 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:04:07.103 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:04:07.376 [redisson-netty-1-7] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:04:07.466 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:04:07.501 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:04:09.193 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:04:09.238 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.006 seconds (JVM running for 4.668)
25-03-02.10:04:09.634 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"204208548305","source":"s01","userId":"xiaofuge"}
25-03-02.10:04:09.634 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:204208548305
25-03-02.10:04:09.650 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:04:10.038 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:04:10.081 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:04:10.082 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:04:10.153 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:04:10.153 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:04:10.154 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:04:10.175 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:04:10.178 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"204208548305","source":"s01","userId":"xiaofuge"} res:{"code":"E0007","info":"拼团人群限定，不可参与"}
25-03-02.10:04:10.189 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:04:10.255 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:15:53.024 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 34004 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:15:53.025 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:15:53.712 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:15:53.714 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:15:53.742 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.10:15:53.974 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:15:54.178 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:15:54.409 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:15:54.667 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:15:54.767 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:15:54.802 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:15:56.359 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:15:56.401 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.737 seconds (JVM running for 4.342)
25-03-02.10:15:56.785 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"372817805752","source":"s01","userId":"xiaofuge"}
25-03-02.10:15:56.786 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:372817805752
25-03-02.10:15:56.800 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:15:57.140 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:15:57.184 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:15:57.186 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:15:57.249 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:15:57.249 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:15:57.249 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:15:57.276 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:15:57.278 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"372817805752","source":"s01","userId":"xiaofuge"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:15:57.281 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"372817805752","source":"s01","userId":"xiaofuge"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:15:57.292 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:15:57.346 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:17:58.047 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 27224 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:17:58.047 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:17:58.766 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:17:58.769 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:17:58.799 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
25-03-02.10:17:59.050 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$36eb75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:17:59.290 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:17:59.559 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:17:59.820 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:17:59.899 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:17:59.945 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:18:01.630 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:18:01.674 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.977 seconds (JVM running for 4.604)
25-03-02.10:18:02.065 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"541234471808","source":"s01","userId":"xiaofuge"}
25-03-02.10:18:02.065 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:541234471808
25-03-02.10:18:02.080 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:18:02.482 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:18:02.527 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:18:02.528 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:18:02.570 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:18:02.570 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:18:02.570 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:18:02.598 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:18:02.600 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"541234471808","source":"s01","userId":"xiaofuge"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:18:02.603 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"541234471808","source":"s01","userId":"xiaofuge"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:18:02.612 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:18:02.677 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:23:02.222 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 29660 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:23:02.223 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:23:02.898 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:23:02.900 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:23:02.936 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
25-03-02.10:23:03.179 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34e1b50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:23:03.393 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:23:03.643 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:23:03.912 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:23:04.003 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:23:04.036 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:23:05.660 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:23:05.705 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.823 seconds (JVM running for 4.437)
25-03-02.10:23:06.108 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"410723611951","source":"s01","userId":"xiaofuge"}
25-03-02.10:23:06.109 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:410723611951
25-03-02.10:23:06.124 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:23:06.527 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:23:06.574 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:23:06.576 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:23:06.638 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:23:06.638 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:23:06.638 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:23:06.663 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:23:06.665 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"410723611951","source":"s01","userId":"xiaofuge"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:23:06.667 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"410723611951","source":"s01","userId":"xiaofuge"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:23:06.678 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:23:06.734 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:26:12.971 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 18.0.2 on wzy with PID 9220 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:26:12.972 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-02.10:26:13.728 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:26:13.730 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:26:13.759 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.10:26:13.997 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$e095e425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:26:14.226 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:26:14.508 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:26:14.776 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:26:14.865 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:26:14.899 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:26:16.559 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:26:16.603 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 4.002 seconds (JVM running for 4.699)
25-03-02.10:26:17.000 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:26:17.006 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:26:17.023 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:26:17.409 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:26:17.487 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:26:17.487 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:26:17.487 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:26:17.515 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:26:17.515 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 请求参数:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:26:17.521 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 返回结果:{"deductionPrice":10.00,"endTime":1796638780000,"goodsId":"9890001","goodsName":"《手写MyBatis：渐进式源码实践》","isEnable":false,"isVisible":false,"originalPrice":100.00,"payPrice":90.00,"startTime":1733566780000,"targetCount":3}
25-03-02.10:26:17.535 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:26:17.555 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:29:54.258 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 18.0.2 on wzy with PID 33668 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:29:54.259 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-02.10:29:54.950 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:29:54.952 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:29:54.982 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.10:29:55.213 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$36eb75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:29:55.444 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:29:55.707 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:29:55.990 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:29:56.089 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:29:56.127 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:29:57.797 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:29:57.839 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 3.923 seconds (JVM running for 4.538)
25-03-02.10:29:58.244 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:29:58.250 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:29:58.268 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:29:58.665 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:29:58.774 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:29:58.774 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:29:58.774 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:29:58.819 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:29:58.820 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 请求参数:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:29:58.825 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 返回结果:{"deductionPrice":10.00,"endTime":1796638780000,"goodsId":"9890001","goodsName":"《手写MyBatis：渐进式源码实践》","isEnable":false,"isVisible":false,"originalPrice":100.00,"payPrice":90.00,"startTime":1733566780000,"targetCount":3}
25-03-02.10:29:58.835 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:29:58.869 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:30:25.796 [main            ] INFO  ITagServiceTest        - Starting ITagServiceTest using Java 18.0.2 on wzy with PID 34620 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:30:25.797 [main            ] INFO  ITagServiceTest        - The following 1 profile is active: "dev"
25-03-02.10:30:26.483 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:30:26.485 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:30:26.514 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
25-03-02.10:30:26.758 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$168c19f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:30:26.985 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:30:27.238 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:30:27.489 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:30:27.579 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:30:27.614 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:30:29.271 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:30:29.314 [main            ] INFO  ITagServiceTest        - Started ITagServiceTest in 3.877 seconds (JVM running for 4.508)
25-03-02.10:30:29.619 [main            ] INFO  ITagServiceTest        - w 存在，预期结果为 true，测试结果:true
25-03-02.10:30:29.629 [main            ] INFO  ITagServiceTest        - gudebai 不存在，预期结果为 false，测试结果:false
25-03-02.10:31:04.800 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 29720 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:31:04.801 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:31:05.509 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:31:05.511 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:31:05.541 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.10:31:05.779 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34e1b50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:31:06.005 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:31:06.280 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:31:06.540 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:31:06.640 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:31:06.675 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:31:08.302 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:31:08.346 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.885 seconds (JVM running for 4.49)
25-03-02.10:31:08.735 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"217457934426","source":"s01","userId":"w"}
25-03-02.10:31:08.735 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:217457934426
25-03-02.10:31:08.750 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:31:09.172 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:31:09.214 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:31:09.216 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:31:09.271 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:31:09.271 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:31:09.271 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:31:09.300 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:31:09.303 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"217457934426","source":"s01","userId":"w"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:31:09.306 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"217457934426","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:31:09.315 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:31:09.380 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:33:06.504 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 23864 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:33:06.505 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:33:07.225 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:33:07.227 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:33:07.258 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
25-03-02.10:33:07.499 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34e1b50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:33:07.725 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:33:07.976 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:33:08.242 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:33:08.382 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:33:08.419 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:33:10.126 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:33:10.169 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.013 seconds (JVM running for 4.64)
25-03-02.10:33:10.592 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"286167977797","source":"s01","teamId":"31724477","userId":"xiaofuge"}
25-03-02.10:33:10.592 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:286167977797
25-03-02.10:33:10.607 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:33:10.954 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:33:10.984 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询拼单进度:31724477
25-03-02.10:33:10.995 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:33:10.999 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:33:11.034 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:33:11.034 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:33:11.034 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:33:11.061 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.10:33:11.063 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"286167977797","source":"s01","teamId":"31724477","userId":"xiaofuge"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder_teamId_not_null(MarketTradeControllerTest.java:54)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:33:11.066 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"286167977797","source":"s01","teamId":"31724477","userId":"xiaofuge"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:33:11.076 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:33:11.143 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:35:30.560 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 18.0.2 on wzy with PID 20256 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:35:30.561 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-02.10:35:31.286 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:35:31.288 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:35:31.317 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.10:35:31.556 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$36eb75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:35:31.784 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:35:32.067 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:35:32.395 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:35:32.625 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:35:32.660 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:35:34.323 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:35:34.369 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 4.149 seconds (JVM running for 4.775)
25-03-02.10:35:34.768 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"channel":"c01","goodsId":"9890002","source":"s01","userId":"xiaofuge"}
25-03-02.10:35:34.774 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"channel":"c01","goodsId":"9890002","source":"s01","userId":"xiaofuge"}
25-03-02.10:35:34.790 [pool-2-thread-1 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:35:35.288 [pool-2-thread-1 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:35:35.391 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:35:35.653 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:35:48.155 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 18.0.2 on wzy with PID 36760 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:35:48.157 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-02.10:35:48.888 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:35:48.890 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:35:48.919 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.10:35:49.163 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$36eb75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:35:49.397 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:35:49.663 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:35:49.934 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:35:50.034 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:35:50.070 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:35:51.682 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:35:51.726 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 3.928 seconds (JVM running for 4.562)
25-03-02.10:35:52.146 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:dacihua requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"dacihua"}
25-03-02.10:35:52.153 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:dacihua requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"dacihua"}
25-03-02.10:35:52.170 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:35:52.528 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:35:52.605 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:dacihua 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:35:52.605 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:dacihua requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"dacihua"}
25-03-02.10:35:52.605 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:35:52.634 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:dacihua requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"dacihua"}
25-03-02.10:35:52.635 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 请求参数:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"dacihua"}
25-03-02.10:35:52.640 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 返回结果:{"deductionPrice":10.00,"endTime":1796638780000,"goodsId":"9890001","goodsName":"《手写MyBatis：渐进式源码实践》","isEnable":false,"isVisible":false,"originalPrice":100.00,"payPrice":90.00,"startTime":1733566780000,"targetCount":3}
25-03-02.10:35:52.653 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:35:52.694 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:41:14.528 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 18.0.2 on wzy with PID 29008 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:41:14.529 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-02.10:41:15.228 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:41:15.230 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:41:15.259 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.10:41:15.494 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:41:15.722 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:41:15.997 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:41:16.270 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:41:16.381 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:41:16.418 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:41:18.065 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:41:18.109 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 3.934 seconds (JVM running for 4.548)
25-03-02.10:41:18.508 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:41:18.515 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:41:18.532 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:41:18.911 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:41:19.014 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:41:19.014 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:41:19.014 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:41:19.039 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:41:19.039 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 请求参数:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:41:19.044 [main            ] INFO  IIndexGroupBuyMarketServiceTest - 返回结果:{"deductionPrice":10.00,"endTime":1796638780000,"goodsId":"9890001","goodsName":"《手写MyBatis：渐进式源码实践》","isEnable":false,"isVisible":false,"originalPrice":100.00,"payPrice":90.00,"startTime":1733566780000,"targetCount":3}
25-03-02.10:41:19.053 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:41:19.208 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:43:12.196 [main            ] INFO  ITagServiceTest        - Starting ITagServiceTest using Java 18.0.2 on wzy with PID 9484 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:43:12.197 [main            ] INFO  ITagServiceTest        - The following 1 profile is active: "dev"
25-03-02.10:43:12.907 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:43:12.911 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:43:12.944 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
25-03-02.10:43:13.187 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34e1b50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:43:13.407 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:43:13.685 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:43:14.022 [redisson-netty-1-7] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:43:14.120 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:43:14.155 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:43:15.887 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:43:15.928 [main            ] INFO  ITagServiceTest        - Started ITagServiceTest in 4.087 seconds (JVM running for 4.704)
25-03-02.10:43:16.240 [main            ] INFO  TagService             - 人群标签批次任务 tagId: RQ_KJHKL98UU78H66554GFDV batchId: 10001
25-03-02.10:43:16.259 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:43:16.636 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:43:16.830 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:43:16.881 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:45:50.745 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 2820 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:45:50.746 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:45:51.434 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:45:51.436 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:45:51.463 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
25-03-02.10:45:51.692 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$36eb75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:45:51.911 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:45:52.160 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:45:52.453 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:45:52.543 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:45:52.578 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:45:54.167 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:45:54.208 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.805 seconds (JVM running for 4.422)
25-03-02.10:45:54.600 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"105204358939","source":"s01","userId":"w"}
25-03-02.10:45:54.600 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:105204358939
25-03-02.10:45:54.614 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:45:54.965 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:45:55.011 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:45:55.013 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:45:55.066 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:45:55.067 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:45:55.067 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:45:55.103 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:45:55.105 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"105204358939","source":"s01","userId":"w"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:45:55.107 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"105204358939","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:45:55.118 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:45:55.162 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:50:07.739 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 31784 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:50:07.740 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:50:08.463 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:50:08.465 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:50:08.495 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.10:50:08.755 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$7aaa9d50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:50:08.987 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:50:09.294 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:50:09.587 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:50:09.686 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:50:09.722 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:50:11.866 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:50:11.920 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.549 seconds (JVM running for 5.309)
25-03-02.10:50:55.021 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"442763206337","source":"s01","userId":"w"}
25-03-02.10:52:51.973 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:442763206337
25-03-02.10:52:52.072 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:52:53.291 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:53:56.297 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:53:56.303 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:53:56.374 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:53:56.374 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:53:56.375 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:53:56.412 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:55:27.353 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m49s387ms254µs800ns).
25-03-02.10:55:27.363 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"442763206337","source":"s01","userId":"w"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:55:27.375 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"442763206337","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:55:27.386 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:55:27.522 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:55:29.539 [redisson-netty-1-3] ERROR rejectedExecution      - Failed to submit a listener notification task. Event loop shut down?
java.util.concurrent.RejectedExecutionException: event executor terminated
	at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:934)
	at io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:351)
	at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:344)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:836)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:817)
	at io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:862)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:500)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:97)
	at io.netty.channel.group.DefaultChannelGroupFuture.setSuccess0(DefaultChannelGroupFuture.java:200)
	at io.netty.channel.group.DefaultChannelGroupFuture.access$400(DefaultChannelGroupFuture.java:41)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:75)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:48)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$CloseFuture.setClosed(AbstractChannel.java:1164)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:755)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:731)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620)
	at io.netty.channel.nio.NioEventLoop.closeAll(NioEventLoop.java:838)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:595)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
25-03-02.10:55:50.143 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 35544 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:55:50.144 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:55:50.856 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:55:50.858 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:55:50.888 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.10:55:51.158 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$7aaa9d50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:55:51.396 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:55:51.682 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:55:51.962 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:55:52.073 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:55:52.109 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:55:54.015 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:55:54.061 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.277 seconds (JVM running for 4.943)
25-03-02.10:55:54.535 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"927256747563","source":"s01","userId":"w"}
25-03-02.10:55:54.535 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:927256747563
25-03-02.10:55:54.550 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:55:54.935 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.10:57:28.811 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:58:04.939 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s74ms480µs100ns).
25-03-02.10:58:13.049 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:58:13.117 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.10:58:13.117 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:58:13.117 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.10:58:13.154 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.10:59:05.929 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m989ms896µs200ns).
25-03-02.10:59:05.939 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"927256747563","source":"s01","userId":"w"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.10:59:05.947 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"927256747563","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.10:59:05.958 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.10:59:06.125 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.10:59:08.098 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 10344 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.10:59:08.099 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.10:59:08.842 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.10:59:08.844 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.10:59:08.872 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
25-03-02.10:59:09.132 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$a8d04afb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:59:09.380 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:59:09.668 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.10:59:09.945 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:59:10.025 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.10:59:10.066 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.10:59:12.006 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.10:59:12.052 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.315 seconds (JVM running for 5.023)
25-03-02.10:59:12.564 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"142773685256","source":"s01","userId":"w"}
25-03-02.10:59:12.564 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:142773685256
25-03-02.10:59:12.581 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.10:59:12.940 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:00:19.917 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:01:04.653 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:02:55.902 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51s149ms248µs100ns).
25-03-02.11:04:29.252 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m2s659ms491µs).
25-03-02.11:04:40.672 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:04:40.673 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:04:40.673 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:04:40.698 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:04:40.710 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:04:40.720 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"142773685256","source":"s01","userId":"w"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.11:04:40.728 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"142773685256","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:04:40.937 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:04:42.958 [redisson-netty-1-3] ERROR rejectedExecution      - Failed to submit a listener notification task. Event loop shut down?
java.util.concurrent.RejectedExecutionException: event executor terminated
	at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:934)
	at io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:351)
	at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:344)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:836)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:817)
	at io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:862)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:500)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:97)
	at io.netty.channel.group.DefaultChannelGroupFuture.setSuccess0(DefaultChannelGroupFuture.java:200)
	at io.netty.channel.group.DefaultChannelGroupFuture.access$400(DefaultChannelGroupFuture.java:41)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:75)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:48)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$CloseFuture.setClosed(AbstractChannel.java:1164)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:755)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:731)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620)
	at io.netty.channel.nio.NioEventLoop.closeAll(NioEventLoop.java:838)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:595)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
25-03-02.11:04:47.960 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 35772 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:04:47.961 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:04:48.651 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:04:48.653 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:04:48.681 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
25-03-02.11:04:48.928 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$3cf5cc6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:04:49.150 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:04:49.433 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:04:49.700 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:04:49.801 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:04:49.837 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:04:51.774 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:04:51.820 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.227 seconds (JVM running for 4.896)
25-03-02.11:04:52.295 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"671130389014","source":"s01","userId":"w"}
25-03-02.11:04:52.295 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:671130389014
25-03-02.11:04:52.310 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:04:52.664 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:05:18.825 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:06:02.095 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:07:46.288 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s789ms766µs600ns).
25-03-02.11:09:39.498 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m8s210ms350µs100ns).
25-03-02.11:10:29.198 [pool-2-thread-2 ] WARN  PoolBase               - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5036afbc (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
25-03-02.11:10:29.207 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"671130389014","source":"s01","userId":"w"}
java.util.concurrent.ExecutionException: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\sku_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.ISkuDao.querySkuByGoodsId
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
	at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.wuzeyu.domain.activity.service.trial.node.MarketNode.multiThread(MarketNode.java:60)
	at com.wuzeyu.domain.activity.service.trial.node.MarketNode.multiThread(MarketNode.java:28)
	at com.wuzeyu.types.design.framework.tree.AbstractMultiThreadStrategyRouter.apply(AbstractMultiThreadStrategyRouter.java:30)
	at com.wuzeyu.types.design.framework.tree.AbstractMultiThreadStrategyRouter.router(AbstractMultiThreadStrategyRouter.java:22)
	at com.wuzeyu.domain.activity.service.trial.node.SwitchNode.doApply(SwitchNode.java:47)
	at com.wuzeyu.domain.activity.service.trial.node.SwitchNode.doApply(SwitchNode.java:21)
	at com.wuzeyu.types.design.framework.tree.AbstractMultiThreadStrategyRouter.apply(AbstractMultiThreadStrategyRouter.java:33)
	at com.wuzeyu.types.design.framework.tree.AbstractMultiThreadStrategyRouter.router(AbstractMultiThreadStrategyRouter.java:22)
	at com.wuzeyu.domain.activity.service.trial.node.RootNode.doApply(RootNode.java:36)
	at com.wuzeyu.domain.activity.service.trial.node.RootNode.doApply(RootNode.java:22)
	at com.wuzeyu.types.design.framework.tree.AbstractMultiThreadStrategyRouter.apply(AbstractMultiThreadStrategyRouter.java:33)
	at com.wuzeyu.domain.activity.service.IIndexGroupBuyMarketServiceImpl.indexMarketTrial(IIndexGroupBuyMarketServiceImpl.java:25)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:102)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\sku_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.ISkuDao.querySkuByGoodsId
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy97.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at jdk.proxy2/jdk.proxy2.$Proxy100.querySkuByGoodsId(Unknown Source)
	at com.wuzeyu.infrastructure.adapter.repository.ActivityRepository.querySkuByGoodsId(ActivityRepository.java:91)
	at com.wuzeyu.infrastructure.adapter.repository.ActivityRepository$$FastClassBySpringCGLIB$$6f0f028f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wuzeyu.infrastructure.adapter.repository.ActivityRepository$$EnhancerBySpringCGLIB$$888d210f.querySkuByGoodsId(<generated>)
	at com.wuzeyu.domain.activity.service.trial.thread.QuerySkuVOFromDBThreadTask.call(QuerySkuVOFromDBThreadTask.java:26)
	at com.wuzeyu.domain.activity.service.trial.thread.QuerySkuVOFromDBThreadTask.call(QuerySkuVOFromDBThreadTask.java:13)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\sku_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.ISkuDao.querySkuByGoodsId
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 24 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 29 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 49700ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:696)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:197)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	... 39 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:712)
	... 5 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.negotiateSSLConnection(NativeProtocol.java:340)
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1348)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:157)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 16 common frames omitted
Caused by: java.net.SocketException: 你的主机中的软件中止了一个已建立的连接。
	at java.base/sun.nio.ch.NioSocketImpl.implWrite(NioSocketImpl.java:417)
	at java.base/sun.nio.ch.NioSocketImpl.write(NioSocketImpl.java:437)
	at java.base/sun.nio.ch.NioSocketImpl$2.write(NioSocketImpl.java:823)
	at java.base/java.net.Socket$SocketOutputStream.write(Socket.java:1035)
	at java.base/sun.security.ssl.SSLSocketOutputRecord.flush(SSLSocketOutputRecord.java:271)
	at java.base/sun.security.ssl.HandshakeOutStream.flush(HandshakeOutStream.java:89)
	at java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:646)
	at java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:529)
	at java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
	at java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:251)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at com.mysql.cj.protocol.ExportControlled.performTlsHandshake(ExportControlled.java:317)
	at com.mysql.cj.protocol.StandardSocketFactory.performTlsHandshake(StandardSocketFactory.java:188)
	at com.mysql.cj.protocol.a.NativeSocketConnection.performTlsHandshake(NativeSocketConnection.java:97)
	at com.mysql.cj.protocol.a.NativeProtocol.negotiateSSLConnection(NativeProtocol.java:331)
	... 20 common frames omitted
25-03-02.11:10:29.221 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:10:29.222 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"671130389014","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:10:29.452 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:10:31.467 [redisson-netty-1-3] ERROR rejectedExecution      - Failed to submit a listener notification task. Event loop shut down?
java.util.concurrent.RejectedExecutionException: event executor terminated
	at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:934)
	at io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:351)
	at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:344)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:836)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:817)
	at io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:862)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:500)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:97)
	at io.netty.channel.group.DefaultChannelGroupFuture.setSuccess0(DefaultChannelGroupFuture.java:200)
	at io.netty.channel.group.DefaultChannelGroupFuture.access$400(DefaultChannelGroupFuture.java:41)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:75)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:48)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$CloseFuture.setClosed(AbstractChannel.java:1164)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:755)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:731)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620)
	at io.netty.channel.nio.NioEventLoop.closeAll(NioEventLoop.java:838)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:595)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
25-03-02.11:10:51.622 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Starting IIndexGroupBuyMarketServiceTest using Java 18.0.2 on wzy with PID 35116 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:10:51.623 [main            ] INFO  IIndexGroupBuyMarketServiceTest - The following 1 profile is active: "dev"
25-03-02.11:10:52.330 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:10:52.332 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:10:52.363 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
25-03-02.11:10:52.619 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$340ceca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:10:52.852 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:10:53.127 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:10:53.395 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:10:53.505 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:10:53.540 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:10:55.456 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:10:55.502 [main            ] INFO  IIndexGroupBuyMarketServiceTest - Started IIndexGroupBuyMarketServiceTest in 4.238 seconds (JVM running for 4.898)
25-03-02.11:10:55.993 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:10:55.999 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:11:07.567 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:11:07.900 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:12:01.714 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 31508 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:12:01.716 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:12:02.417 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:12:02.419 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:12:02.448 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.11:12:02.691 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$3cf5cc6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:12:02.920 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:12:03.198 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:12:03.476 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:12:03.627 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:12:03.662 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:12:05.581 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:12:05.626 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.255 seconds (JVM running for 4.904)
25-03-02.11:12:06.091 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"088180445131","source":"s01","userId":"w"}
25-03-02.11:12:06.092 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:088180445131
25-03-02.11:12:06.108 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:12:06.480 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:12:23.144 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:12:38.982 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:13:38.989 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m28s765ms54µs400ns).
25-03-02.11:14:04.351 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:14:08.817 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:15:09.865 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51s837ms315µs700ns).
25-03-02.11:16:12.512 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:17:31.908 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48s381ms649µs200ns).
25-03-02.11:18:39.514 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m28s608ms934µs300ns).
25-03-02.11:18:39.516 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:18:39.517 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:18:39.517 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:18:15.741 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:18:39.541 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:18:39.552 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"088180445131","source":"s01","userId":"w"}
java.lang.NullPointerException: Cannot invoke "com.wuzeyu.domain.activity.model.valobj.GroupBuyActivityDiscountVO.getActivityName()" because "groupBuyActivityDiscountVO" is null
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:118)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.11:18:39.560 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"088180445131","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:18:39.570 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:18:49.765 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:19:22.345 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 2324 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:19:22.346 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:19:23.007 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:19:23.009 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:19:23.038 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.11:19:23.269 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34e1b50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:19:23.495 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:19:23.749 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:19:24.007 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:19:24.083 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:19:24.119 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:19:25.668 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:19:25.711 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.693 seconds (JVM running for 4.277)
25-03-02.11:19:26.106 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"055615763330","source":"s01","userId":"w"}
25-03-02.11:19:26.106 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:055615763330
25-03-02.11:19:26.121 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:19:26.445 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:19:26.534 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:19:26.535 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:19:26.576 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:19:26.576 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:19:26.576 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:19:26.614 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:19:26.725 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"055615763330","source":"s01","userId":"w"}
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'valid_start_time' cannot be null
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.IGroupBuyOrderDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into group_buy_order(         team_id, activity_id, source, channel, original_price,         deduction_price, pay_price, target_count, complete_count,         lock_count, status, valid_start_time, valid_end_time, notify_url, create_time, update_time         ) values(         ?, ?, ?, ?, ?,         ?, ?, ?, ?,         ?, 0, ?, ?, ?, now(), now()         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'valid_start_time' cannot be null
; Column 'valid_start_time' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'valid_start_time' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy97.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at jdk.proxy2/jdk.proxy2.$Proxy102.insert(Unknown Source)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository.lockMarketPayOrder(TradeRepository.java:96)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$FastClassBySpringCGLIB$$86a7fcb8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$f541a250.lockMarketPayOrder(<generated>)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:52)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:113)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'valid_start_time' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 56 common frames omitted
25-03-02.11:19:26.728 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"055615763330","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:19:26.739 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:19:26.814 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:22:33.320 [main            ] INFO  ITradeLockOrderServiceTest - Starting ITradeLockOrderServiceTest using Java 18.0.2 on wzy with PID 33484 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:22:33.321 [main            ] INFO  ITradeLockOrderServiceTest - The following 1 profile is active: "dev"
25-03-02.11:22:34.002 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:22:34.005 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:22:34.033 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.11:22:34.261 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$78549a08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:22:34.476 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:22:34.744 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:22:34.997 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:22:35.078 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:22:35.114 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:22:36.748 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:22:36.792 [main            ] INFO  ITradeLockOrderServiceTest - Started ITradeLockOrderServiceTest in 3.8 seconds (JVM running for 4.395)
25-03-02.11:22:37.176 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:22:37.183 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:22:37.202 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:22:37.558 [pool-2-thread-2 ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:22:37.629 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:22:37.629 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:22:37.629 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:22:37.657 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:22:37.659 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:330015345410
25-03-02.11:22:37.734 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:22:37.836 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:28:55.392 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 18368 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:28:55.393 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:28:56.099 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:28:56.102 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:28:56.134 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
25-03-02.11:28:56.381 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:28:56.608 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:28:56.887 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:28:57.214 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:28:57.303 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:28:57.340 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:28:58.932 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:28:58.973 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.915 seconds (JVM running for 4.524)
25-03-02.11:28:59.368 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"429573055471","source":"s01","userId":"w"}
25-03-02.11:28:59.368 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:429573055471
25-03-02.11:28:59.383 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:28:59.706 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:28:59.748 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:28:59.750 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:28:59.785 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:28:59.785 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:28:59.785 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:28:59.813 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:28:59.916 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"429573055471","source":"s01","userId":"w"}
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.IGroupBuyOrderDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into group_buy_order(         team_id, activity_id, source, channel, original_price,         deduction_price, pay_price, target_count, complete_count,         lock_count, status, valid_start_time, valid_end_time, notify_url, create_time, update_time         ) values(         ?, ?, ?, ?, ?,         ?, ?, ?, ?,         ?, 0, ?, ?, ?, now(), now()         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
; Column 'notify_url' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy97.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at jdk.proxy2/jdk.proxy2.$Proxy102.insert(Unknown Source)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository.lockMarketPayOrder(TradeRepository.java:104)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$FastClassBySpringCGLIB$$86a7fcb8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$99004140.lockMarketPayOrder(<generated>)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:52)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:113)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 56 common frames omitted
25-03-02.11:28:59.919 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"429573055471","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:28:59.929 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:29:00.032 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:30:21.476 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 5396 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:30:21.477 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:30:22.175 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:30:22.177 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:30:22.205 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.11:30:22.440 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:30:22.666 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:30:22.925 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:30:23.206 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:30:23.315 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:30:23.351 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:30:25.017 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:30:25.064 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.936 seconds (JVM running for 4.545)
25-03-02.11:30:25.509 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"231692786390","source":"s01","userId":"w"}
25-03-02.11:30:25.509 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:231692786390
25-03-02.11:30:25.523 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:30:25.887 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:30:25.930 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:30:25.931 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:30:25.996 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:30:25.996 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:30:25.996 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:30:26.037 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:30:26.156 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"231692786390","source":"s01","userId":"w"}
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.IGroupBuyOrderDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into group_buy_order(         team_id, activity_id, source, channel, original_price,         deduction_price, pay_price, target_count, complete_count,         lock_count, status, valid_start_time, valid_end_time, notify_url, create_time, update_time         ) values(         ?, ?, ?, ?, ?,         ?, ?, ?, ?,         ?, 0, ?, ?, ?, now(), now()         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
; Column 'notify_url' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy97.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at jdk.proxy2/jdk.proxy2.$Proxy102.insert(Unknown Source)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository.lockMarketPayOrder(TradeRepository.java:104)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$FastClassBySpringCGLIB$$86a7fcb8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$99004140.lockMarketPayOrder(<generated>)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:52)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:113)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'notify_url' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 56 common frames omitted
25-03-02.11:30:26.159 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"231692786390","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:30:26.170 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:30:26.264 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:32:05.449 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 4016 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:32:05.450 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:32:06.139 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:32:06.141 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:32:06.170 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-03-02.11:32:06.416 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$e095e425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:32:06.661 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:32:06.950 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:32:07.218 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:32:07.337 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:32:07.374 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:32:09.053 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:32:09.095 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.999 seconds (JVM running for 4.635)
25-03-02.11:32:09.495 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"047425022434","source":"s01","userId":"w"}
25-03-02.11:32:09.495 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:047425022434
25-03-02.11:32:09.510 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:32:09.879 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:32:09.932 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:32:09.933 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:32:09.997 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:32:09.997 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:32:09.997 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:32:10.035 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:32:10.187 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"047425022434","source":"s01","userId":"w"}
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'biz_id' cannot be null
### The error may exist in file [C:\Users\吴泽宇\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]
### The error may involve com.wuzeyu.infrastructure.dao.IGroupBuyOrderListDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into group_buy_order_list(         user_id, team_id, order_id, activity_id, start_time,         end_time, goods_id, source, channel, original_price,         deduction_price, status, out_trade_no, biz_id, create_time, update_time         )         values(         ?, ?, ?, ?, ?,         ?, ?, ?, ?, ?,         ?, ?, ?, ?, now(), now()         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'biz_id' cannot be null
; Column 'biz_id' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'biz_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at jdk.proxy2/jdk.proxy2.$Proxy97.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at jdk.proxy2/jdk.proxy2.$Proxy103.insert(Unknown Source)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository.lockMarketPayOrder(TradeRepository.java:132)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$FastClassBySpringCGLIB$$86a7fcb8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wuzeyu.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$57b31a2c.lockMarketPayOrder(<generated>)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:52)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:113)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'biz_id' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 56 common frames omitted
25-03-02.11:32:10.190 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"047425022434","source":"s01","userId":"w"} res:{"code":"0001","info":"未知失败"}
25-03-02.11:32:10.201 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:32:10.275 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:34:24.752 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 27864 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:34:24.753 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:34:25.449 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:34:25.451 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:34:25.483 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
25-03-02.11:34:25.724 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$36eb75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:34:25.945 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:34:26.199 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:34:26.478 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:34:26.548 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:34:26.587 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:34:28.266 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:34:28.309 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.909 seconds (JVM running for 4.54)
25-03-02.11:34:28.740 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"033166453031","source":"s01","userId":"w"}
25-03-02.11:34:28.740 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:033166453031
25-03-02.11:34:28.754 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:34:29.111 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:34:29.152 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:34:29.153 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:34:29.199 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:34:29.199 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:34:29.199 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:34:29.217 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:34:29.330 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):w marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"504738298154","tradeOrderStatusEnumVO":"CREATE"}
25-03-02.11:34:29.333 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"033166453031","source":"s01","userId":"w"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"504738298154","tradeOrderStatus":0},"info":"成功"}
25-03-02.11:34:29.346 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:34:29.447 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:36:39.952 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 34148 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:36:39.953 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:36:40.635 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:36:40.637 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:36:40.666 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-03-02.11:36:40.901 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34e1b50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:36:41.116 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:36:41.391 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:36:41.650 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:36:41.809 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:36:41.845 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:36:43.477 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:36:43.520 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.919 seconds (JVM running for 4.542)
25-03-02.11:36:43.911 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"315924818039","source":"s01","teamId":"36699507","userId":"xiaofuge"}
25-03-02.11:36:43.911 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:315924818039
25-03-02.11:36:43.926 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:36:44.332 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:36:44.372 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询拼单进度:36699507
25-03-02.11:36:44.394 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:36:44.396 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:36:44.461 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:36:44.462 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:36:44.462 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:36:44.490 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-03-02.11:36:44.612 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):xiaofuge marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"227123900304","tradeOrderStatusEnumVO":"CREATE"}
25-03-02.11:36:44.616 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"315924818039","source":"s01","teamId":"36699507","userId":"xiaofuge"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"227123900304","tradeOrderStatus":0},"info":"成功"}
25-03-02.11:36:44.625 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:36:44.679 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.11:38:07.118 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 12844 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.11:38:07.119 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.11:38:07.821 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.11:38:07.824 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.11:38:07.857 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
25-03-02.11:38:08.110 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$5a130dc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:38:08.342 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:38:08.599 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.11:38:08.881 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:38:08.991 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.11:38:09.033 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.11:38:10.637 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.11:38:10.678 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.935 seconds (JVM running for 4.612)
25-03-02.11:38:11.081 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"345381676847","source":"s01","teamId":"36699507","userId":"w"}
25-03-02.11:38:11.081 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:345381676847
25-03-02.11:38:11.096 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.11:38:11.446 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.11:38:11.488 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询拼单进度:36699507
25-03-02.11:38:11.506 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:38:11.508 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:38:11.563 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.11:38:11.564 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:38:11.564 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.11:38:11.591 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.11:38:11.715 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):w marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"737515666913","tradeOrderStatusEnumVO":"CREATE"}
25-03-02.11:38:11.719 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"345381676847","source":"s01","teamId":"36699507","userId":"w"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"737515666913","tradeOrderStatus":0},"info":"成功"}
25-03-02.11:38:11.729 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.11:38:11.811 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.23:56:53.369 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 35180 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.23:56:53.370 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.23:56:54.272 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.23:56:54.275 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.23:56:54.317 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
25-03-02.23:56:54.608 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$915ce2f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:56:54.924 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:56:55.222 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.23:56:55.523 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:56:55.642 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:56:55.682 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:56:57.468 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.23:56:57.512 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.567 seconds (JVM running for 5.376)
25-03-02.23:56:58.005 [main            ] INFO  MarketTradeController  - 营销交易锁单:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"618705545428","source":"s01","userId":"w"}
25-03-02.23:56:58.005 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:w outTradeNo:618705545428
25-03-02.23:56:58.023 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.23:56:58.449 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.23:56:58.501 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.23:56:58.503 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.23:56:58.564 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.23:56:58.564 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.23:56:58.564 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.23:56:58.594 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:w requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"w"}
25-03-02.23:56:58.595 [main            ] INFO  TradeLockOrderService  - 拼团交易-锁定营销优惠支付订单:w activityId:100123 goodsId:9890001
25-03-02.23:56:58.596 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验w activityId:100123
25-03-02.23:56:58.615 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验w activityId:100123
25-03-02.23:56:58.637 [main            ] INFO  UserTakeLimitRuleFilter - 用户参与次数校验，已达可参与上限 activityId:100123
25-03-02.23:56:58.639 [main            ] ERROR MarketTradeController  - 营销交易锁单业务异常:w LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"618705545428","source":"s01","userId":"w"}
com.wuzeyu.types.exception.AppException: null
	at com.wuzeyu.domain.trade.service.lock.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:39)
	at com.wuzeyu.domain.trade.service.lock.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:21)
	at com.wuzeyu.types.design.framework.link.model2.chain.BusinessLinkedList.apply(BusinessLinkedList.java:21)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:47)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:123)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.23:56:58.641 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"618705545428","source":"s01","userId":"w"} res:{"code":"E0103","info":"当前用户参与此拼团次数已达上限"}
25-03-02.23:56:58.651 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.23:56:58.693 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.23:57:33.696 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 16508 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.23:57:33.697 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.23:57:34.446 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.23:57:34.449 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.23:57:34.483 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
25-03-02.23:57:34.731 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$f938db1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:57:34.974 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:57:35.232 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.23:57:35.515 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:57:35.603 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:57:35.641 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:57:37.274 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.23:57:37.315 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 3.978 seconds (JVM running for 4.637)
25-03-02.23:57:37.745 [main            ] INFO  MarketTradeController  - 营销交易锁单:xfg02 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"300041426991","source":"s01","userId":"xfg02"}
25-03-02.23:57:37.745 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xfg02 outTradeNo:300041426991
25-03-02.23:57:37.763 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.23:57:38.187 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.23:57:38.228 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:57:38.230 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:57:38.299 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg02 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.23:57:38.299 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:57:38.299 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.23:57:38.332 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:57:38.334 [main            ] INFO  TradeLockOrderService  - 拼团交易-锁定营销优惠支付订单:xfg02 activityId:100123 goodsId:9890001
25-03-02.23:57:38.334 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验xfg02 activityId:100123
25-03-02.23:57:38.367 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xfg02 activityId:100123
25-03-02.23:57:38.386 [main            ] INFO  UserTakeLimitRuleFilter - 用户参与次数校验，已达可参与上限 activityId:100123
25-03-02.23:57:38.389 [main            ] ERROR MarketTradeController  - 营销交易锁单业务异常:xfg02 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"300041426991","source":"s01","userId":"xfg02"}
com.wuzeyu.types.exception.AppException: null
	at com.wuzeyu.domain.trade.service.lock.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:39)
	at com.wuzeyu.domain.trade.service.lock.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:21)
	at com.wuzeyu.types.design.framework.link.model2.chain.BusinessLinkedList.apply(BusinessLinkedList.java:21)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:47)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:123)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.23:57:38.391 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"300041426991","source":"s01","userId":"xfg02"} res:{"code":"E0103","info":"当前用户参与此拼团次数已达上限"}
25-03-02.23:57:38.402 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.23:57:38.422 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.23:58:09.263 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 33952 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.23:58:09.264 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.23:58:10.031 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.23:58:10.034 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.23:58:10.067 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
25-03-02.23:58:10.322 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$f938db1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:58:10.562 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:58:10.843 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.23:58:11.104 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:58:11.224 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:58:11.258 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:58:12.958 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.23:58:13.006 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.113 seconds (JVM running for 4.771)
25-03-02.23:58:13.428 [main            ] INFO  MarketTradeController  - 营销交易锁单:xfg02 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"521334585374","source":"s01","userId":"xfg02"}
25-03-02.23:58:13.428 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:xfg02 outTradeNo:521334585374
25-03-02.23:58:13.444 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.23:58:13.827 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.23:58:13.871 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:58:13.873 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:58:13.952 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg02 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.23:58:13.952 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:58:13.952 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.23:58:13.984 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xfg02 requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg02"}
25-03-02.23:58:13.985 [main            ] INFO  TradeLockOrderService  - 拼团交易-锁定营销优惠支付订单:xfg02 activityId:100123 goodsId:9890001
25-03-02.23:58:13.986 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验xfg02 activityId:100123
25-03-02.23:58:14.005 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xfg02 activityId:100123
25-03-02.23:58:14.027 [main            ] INFO  UserTakeLimitRuleFilter - 用户参与次数校验，已达可参与上限 activityId:100123
25-03-02.23:58:14.028 [main            ] ERROR MarketTradeController  - 营销交易锁单业务异常:xfg02 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"521334585374","source":"s01","userId":"xfg02"}
com.wuzeyu.types.exception.AppException: null
	at com.wuzeyu.domain.trade.service.lock.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:39)
	at com.wuzeyu.domain.trade.service.lock.filter.UserTakeLimitRuleFilter.apply(UserTakeLimitRuleFilter.java:21)
	at com.wuzeyu.types.design.framework.link.model2.chain.BusinessLinkedList.apply(BusinessLinkedList.java:21)
	at com.wuzeyu.domain.trade.service.lock.TradeLockOrderService.lockMarketPayOrder(TradeLockOrderService.java:47)
	at com.wuzeyu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:123)
	at com.wuzeyu.test.trigger.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-02.23:58:14.031 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"521334585374","source":"s01","userId":"xfg02"} res:{"code":"E0103","info":"当前用户参与此拼团次数已达上限"}
25-03-02.23:58:14.040 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.23:58:14.064 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-02.23:59:45.890 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 18.0.2 on wzy with PID 15904 (started by 吴泽宇 in C:\Users\吴泽宇\group-buy-market\group-buy-market-app)
25-03-02.23:59:45.891 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-02.23:59:46.634 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-02.23:59:46.637 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-02.23:59:46.670 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
25-03-02.23:59:46.933 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [com.wuzeyu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$f938db1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:59:47.188 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-com.wuzeyu.config.RedisClientConfigProperties' of type [com.wuzeyu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:59:47.465 [main            ] INFO  Version                - Redisson 3.26.0
25-03-02.23:59:47.736 [redisson-netty-1-6] INFO  ConnectionsHolder      - 1 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:59:47.816 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 47.122.26.159/47.122.26.159:6379
25-03-02.23:59:47.854 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-02.23:59:49.582 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-02.23:59:49.626 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 4.099 seconds (JVM running for 4.747)
25-03-02.23:59:50.063 [main            ] INFO  MarketTradeController  - 营销交易锁单:zyt LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"816760346153","source":"s01","userId":"zyt"}
25-03-02.23:59:50.063 [main            ] INFO  TradeLockOrderService  - 拼团交易-查询未支付营销订单:zyt outTradeNo:816760346153
25-03-02.23:59:50.080 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-02.23:59:50.469 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-02.23:59:50.512 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:zyt requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"zyt"}
25-03-02.23:59:50.515 [main            ] INFO  SwitchNode             - 拼团商品查询试算服务-SwitchNode userId:zyt requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"zyt"}
25-03-02.23:59:50.577 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:zyt 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-02.23:59:50.577 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:zyt requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"zyt"}
25-03-02.23:59:50.577 [main            ] INFO  MJCalculateService     - 优惠策略折扣计算: 0
25-03-02.23:59:50.605 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:zyt requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"zyt"}
25-03-02.23:59:50.606 [main            ] INFO  TradeLockOrderService  - 拼团交易-锁定营销优惠支付订单:zyt activityId:100123 goodsId:9890001
25-03-02.23:59:50.607 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动的可用性校验zyt activityId:100123
25-03-02.23:59:50.626 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验zyt activityId:100123
25-03-02.23:59:50.767 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):zyt marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"871944947006","tradeOrderStatusEnumVO":"CREATE"}
25-03-02.23:59:50.770 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"816760346153","source":"s01","userId":"zyt"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"871944947006","tradeOrderStatus":0},"info":"成功"}
25-03-02.23:59:50.781 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-02.23:59:50.815 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
